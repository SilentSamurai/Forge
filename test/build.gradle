
abstract class GreetingPluginExtension {
    abstract Property<String> getMessage()

    GreetingPluginExtension() {
        message.convention('Hello from GreetingPlugin')
    }
}

class GreetingPlugin implements Plugin<Project> {

    void apply(Project project) {
        // Add the 'greeting' extension object
        def extension = project.extensions.create('scripts', GreetingPluginExtension)
        // Add a task that uses configuration from the extension object
        project.task('build') {
            doLast {
                println extension
            }
        }
    }
}

apply plugin: GreetingPlugin

// Configure the extension
// greeting.message = 'Hi from Gradle'

scripts {
    normal {
        steps "gen" {
            sh "generate some cde"
            sh "hapeinasif"
            mv {
                from "from Folder"
                to "some other folder"
            }
            rm "some folder"
        }
    }

}
